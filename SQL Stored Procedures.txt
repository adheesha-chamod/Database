SQL Stored Procedures
=====================
* A stored procedure is a prepared SQL code that you can save, so the code can be reused over and over again.
* So if you have an SQL query that you write over and over again, save it as a stored procedure, and then just call it to execute it.
* You can also pass parameters to a stored procedure, so that the stored procedure can act based on the parameter value(s) that is passed.


Syntax: (create procedure)
-------
DELIMITER //

CREATE PROCEDURE procedure_name()
BEGIN
    -- sql statements go here
END //

DELIMITER ;


Syntax: (execute procedure)
-------
CALL procedure_name();


Ex:

(Q)
DELIMITER //

CREATE PROCEDURE SelectAllCustomers()
BEGIN
    SELECT * FROM Customers;
END //

DELIMITER ;

* The above SQL statement creates a stored procedure named "SelectAllCustomers" that selects all records from the "Customers" table.


CALL SelectAllCustomers();

* Execute the stored procedure that created above.


(Q)
DELIMITER //

CREATE PROCEDURE SelectAllCustomers(IN City VARCHAR(30))
BEGIN
    SELECT * FROM Customers WHERE City = City;
END //

DELIMITER ;

* The above SQL statement creates a stored procedure that selects Customers from a particular City from the "Customers" table.
* 'IN' specify the parameter direction (input).
* Maximum length of the City (here 30) has to be specified, otherwise it will give an error.


CALL SelectAllCustomers('London');

* Execute the stored procedure that created above.


(Q)
DELIMITER //

CREATE PROCEDURE SelectAllCustomers(IN City VARCHAR(30), IN PostalCode VARCHAR(10))
BEGIN
    SELECT * FROM Customers WHERE City = City AND PostalCode = PostalCode;
END //

DELIMITER ;

* The above SQL statement creates a stored procedure that selects Customers from a particular City with a particular PostalCode from the "Customers" table.


EXEC SelectAllCustomers @City = 'London', @PostalCode = 'WA1 1DP';

* Execute the stored procedure that created above.


































